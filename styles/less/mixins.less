.transition(@d) {
  -webkit-transition-duration: @d;
  transition-duration: @d;
}

.transform-origin(@to) {
  -webkit-transform-origin: @to;
  transform-origin: @to;
}

.transform(@t) {
  -webkit-transform: @t;
  transform: @t;
}

.hairline(@position, @color) when (@position = top) {
  &:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: auto;
    right: auto;
    height: 1px;
    width: 100%;
    background-color: @color;
    display: block;
    z-index: 15;
    .transform-origin(50% 0%);

    html.ios-gt-6.pixel-ratio-2 & {
      .transform(scaleY(0.5));
    }

    html.ios-gt-6.pixel-ratio-3 & {
      .transform(scaleY(0.33));
    }
  }
}

.hairline(@position, @color) when (@position = left) {
  &:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: auto;
    right: auto;
    width: 1px;
    height: 100%;
    background-color: @color;
    display: block;
    z-index: 15;
    .transform-origin(0% 50%);

    html.ios-gt-6.pixel-ratio-2 & {
      .transform(scaleX(0.5));
    }

    html.ios-gt-6.pixel-ratio-3 & {
      .transform(scaleX(0.33));
    }
  }
}

.hairline(@position, @color) when (@position = bottom) {
  &:after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    right: auto;
    top: auto;
    height: 1px;
    width: 100%;
    background-color: @color;
    display: block;
    z-index: 15;
    .transform-origin(50% 100%);

    html.ios-gt-6.pixel-ratio-2 & {
      .transform(scaleY(0.5));
    }

    html.ios-gt-6.pixel-ratio-3 & {
      .transform(scaleY(0.33));
    }
  }
}

.hairline(@position, @color) when (@position = right) {
  &:after {
    content: '';
    position: absolute;
    right: 0;
    top: 0;
    left: auto;
    bottom: auto;
    width: 1px;
    height: 100%;
    background-color: @color;
    display: block;
    z-index: 15;
    .transform-origin(100% 50%);

    html.ios-gt-6.pixel-ratio-2 & {
      .transform(scaleX(0.5));
    }

    html.ios-gt-6.pixel-ratio-3 & {
      .transform(scaleX(0.33));
    }
  }
}

.hairline-remove(@position) when not (@position = left) and not (@position = top) {
  &:after {
    display: none;
  }
}

.hairline-remove(@position) when not (@position = right) and not (@position = bottom) {
  &:before {
    display: none;
  }
}

.flexbox() {
  display: -webkit-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

.justify-content(@jc) when (@jc = flex-start) {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
}

.justify-content(@jc) when (@jc = flex-end) {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  -webkit-justify-content: flex-end;
  justify-content: flex-end;
}

.justify-content(@jc) when (@jc = space-between) {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}

.justify-content(@jc) when not (@jc = flex-start) and not (@jc = flex-end) and not (@jc = space-between) {
  -webkit-box-pack: @jc;
  -ms-flex-pack: @jc;
  -webkit-justify-content: @jc;
  justify-content: @jc;
}

.align-items(@ai) when (@ai = flex-start) {
  -webkit-box-align: start;
  -ms-flex-align: start;
  -webkit-align-items: flex-start;
  align-items: flex-start;
}

.align-items(@ai) when (@ai = flex-end) {
  -webkit-box-align: end;
  -ms-flex-align: end;
  -webkit-align-items: flex-end;
  align-items: flex-end;
}

.align-items(@ai) when not (@ai = flex-start) and not (@ai = flex-end) {
  -webkit-box-align: @ai;
  -ms-flex-align: @ai;
  -webkit-align-items: @ai;
  align-items: @ai;
}